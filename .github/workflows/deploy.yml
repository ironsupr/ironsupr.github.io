name: Deploy Portfolio to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Inject production secrets into config.js
      run: |
        # Create a temporary script to safely replace the config values
        cat > inject_config.js << 'EOF'
        const fs = require('fs');
        
        // Read the config file
        let configContent = fs.readFileSync('config.js', 'utf8');
        
        // Replace the empty values with actual secrets
        configContent = configContent.replace(/GEMINI_API_KEY: '',/, `GEMINI_API_KEY: '${{ secrets.GEMINI_API_KEY }}',`);
        
        // Set production environment
        configContent = configContent.replace(/NODE_ENV: 'development',/, `NODE_ENV: 'production',`);
        configContent = configContent.replace(/DEBUG: true/, `DEBUG: false`);
        
        // Write the updated config back
        fs.writeFileSync('config.js', configContent);
        
        console.log('✅ Configuration updated for production');
        EOF
        
        # Run the injection script
        node inject_config.js
        rm inject_config.js
        
    - name: Verify configuration injection
      run: |
        echo "Checking if secrets were properly injected..."
        
        # Check if the config contains the actual secrets (not empty)
        if grep -q "GEMINI_API_KEY: '${{ secrets.GEMINI_API_KEY }}'" config.js; then
          echo "✅ GEMINI_API_KEY injected successfully"
        else
          echo "❌ GEMINI_API_KEY injection failed"
          echo "Current GEMINI_API_KEY line:"
          grep "GEMINI_API_KEY:" config.js || echo "Line not found"
        fi
        
        if grep -q "NODE_ENV: 'production'" config.js; then
          echo "✅ Production environment set"
        else
          echo "❌ Production environment not set"
        fi
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
